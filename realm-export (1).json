{
  "id": "external-bank-idm",
  "realm": "external-bank-idm",
  "displayName": "Аутентификация и авторизация внешних систем и пользователей Банка Дом.РФ",
  "notBefore": 1674634313,
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 900,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 600,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": true,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 1800,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 1800,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 5,
  "defaultRole": {
    "id": "0b563969-3aa0-4928-a416-4dfa7868c3e1",
    "name": "default-roles-external-bank-idm",
    "description": "${role_default-roles-external-bank-idm}",
    "composite": true,
    "clientRole": false,
    "containerId": "external-bank-idm"
  },
  "requiredCredentials": [
    "password"
  ],
  "passwordPolicy": "length(8) and upperCase(1) and lowerCase(1) and digits(1) and specialChars(1) and forceExpiredPasswordChange(90) and regexPattern((?=.*[0-9])(?=.*[.,:;?!*+%\\-<>@\\[\\]{}\\/\\\\_$#])(?=.*[a-zA-Z])[0-9a-zA-Z.,:;?!*+%\\-<>@\\[\\]{}\\/\\\\_$#]{8,})",
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopes": [
    {
      "id": "b81c459b-4c3d-4180-a6d6-98b0ba99d892",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "5e32d8db-df8e-41b6-a4be-8ed850b511f9",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6137655b-7062-4090-9168-eabc6f272f37",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "765c8213-8f85-4640-a35b-2adc1ff1d9ce",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "2abb025c-8efc-434a-96d2-2ec4e16c9b0e",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "7d4a1070-a581-409a-8887-9b399a2c2871",
      "name": "lksk.upa.readwrite",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "d0f75e62-41f2-4bd0-ab94-c26e58774c76",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "7ee3ad11-3a1d-4556-a4fd-0648bba1cc42",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bb91a1cf-48dc-486c-9790-d7434df6fd73",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "badf62d1-7e2a-47cf-9137-107a9b251945",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "30e87176-17bc-41bd-8c23-e1929ec4c2d4",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "450eea82-0c64-4200-b7db-90814a7a50e7",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "22eb7ed6-d375-4a43-bcec-f80e3d77d08d",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "078f571b-2c07-43f6-b998-f5d654c0c880",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "38e431cb-dc35-4a56-b5d4-51580b66ce98",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a3514660-4b62-4a33-adb9-f31a3fbff9c0",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0b7ca5ea-3499-4c36-8a34-e5df6d4103ed",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bfc925e7-97fc-40dc-921e-244e103fe742",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b06f617f-4947-445c-92cb-d16fa46ad5c6",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "7a159b5d-7e1b-46b0-b411-3609aa6aa063",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9dec1f0a-3b40-42dc-a84d-5f236f1eb485",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "87f7fb75-7cbf-47f6-af25-01a60f349d41",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0ecb9a3b-9186-4ec9-a354-4a9c73de7b9d",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "d6af2f2e-695d-488b-9626-ca9a2421d7da",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "0dfbf800-ff95-465a-a528-5b1b6faee20d",
      "name": "lksk.dd.readwrite",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "53ee7b48-9d22-48ea-ad0c-a5e10cf96f54",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0bf90f2f-6abd-4750-9993-587536c67d32",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "b6f93441-0e05-441e-9921-73a48f5cb2a1",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "373bd8cf-24a1-44d9-9356-db34f31131b6",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "4e788325-9b5a-41b9-8c05-485e70fbbcce",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "70ca24ec-c065-437c-814a-6ebe23ec1a97",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "79cfa803-9c71-4173-96dd-e5bc8bab846b",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "92d009f6-9504-4943-a377-c274f3287d30",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "338afc5a-33fb-46bf-bfad-50830fc4f7f8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "8d32d71b-d5be-4b86-a918-367fc582c099",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "adad547e-fcc2-4bc0-9512-eea56387a0b6",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de2d6925-b2e7-4ba2-b464-8d9b1f6c5fc7",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "cf93d26f-5b84-4f20-9006-2f4e5444b4a0",
      "name": "css.smb.readwrite",
      "description": "",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "e469cc92-8835-431d-be4b-69acb187a6a5",
      "name": "credit.app.write",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles"
  ],
  "defaultOptionalClientScopes": [],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "password": "**********",
    "starttls": "false",
    "auth": "true",
    "port": "25",
    "host": "oa.roscap.com",
    "from": "svc-domrfid@domrf.ru",
    "fromDisplayName": "[STAGE][EXT] DOM.Login",
    "ssl": "",
    "user": "roscap\\svc-domrfid"
  },
  "loginTheme": "WDT-82",
  "accountTheme": "keycloak",
  "adminTheme": "domtheme",
  "emailTheme": "domtheme",
  "eventsEnabled": true,
  "eventsExpiration": 604800,
  "eventsListeners": [
    "metrics-listener",
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "SEND_VERIFY_EMAIL",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "VALIDATE_ACCESS_TOKEN_ERROR",
    "CLIENT_INFO",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "UPDATE_PROFILE_ERROR",
    "VALIDATE_ACCESS_TOKEN",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_UPDATE_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "INVALID_SIGNATURE_ERROR",
    "TOKEN_EXCHANGE",
    "CLIENT_REGISTER_ERROR",
    "LOGOUT",
    "REGISTER",
    "USER_INFO_REQUEST",
    "DELETE_ACCOUNT_ERROR",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "SEND_VERIFY_EMAIL_ERROR",
    "REFRESH_TOKEN",
    "UPDATE_PASSWORD",
    "RESET_PASSWORD",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "REFRESH_TOKEN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "CODE_TO_TOKEN",
    "GRANT_CONSENT_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [
    {
      "alias": "internal-bank-idm.realm",
      "displayName": "Вход для сотрудника Банка Дом.РФ",
      "internalId": "084728a6-ba8d-4afa-9dbd-3a8344bc8116",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/userinfo",
        "validateSignature": "true",
        "hideOnLoginPage": "false",
        "clientId": "app-bank-internal.realm",
        "tokenUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/token",
        "jwksUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/certs",
        "backchannelSupported": "false",
        "issuer": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm",
        "useJwksUrl": "true",
        "authorizationUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/auth",
        "clientAuthMethod": "client_secret_basic",
        "disableUserInfo": "true",
        "logoutUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/logout",
        "syncMode": "FORCE",
        "clientSecret": "**********"
      }
    },
    {
      "alias": "internal-bank-idm-mobile.realm",
      "displayName": "Вход для сотрудников Банка \"Дом.РФ\" через мобильные приложения",
      "internalId": "95f96436-08e7-4a0f-a96e-e5caabbb95ff",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": true,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "postBrokerLoginFlowAlias": "S.AUTH.0.5_mobile_otp",
      "config": {
        "hideOnLoginPage": "true",
        "validateSignature": "true",
        "userInfoUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/userinfo",
        "tokenUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/token",
        "clientId": "app-bank-mobile.bank.portal",
        "jwksUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/certs",
        "backchannelSupported": "true",
        "issuer": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm",
        "useJwksUrl": "true",
        "authorizationUrl": "https://auth-stage.roscap.com/auth/realms/internal-bank-idm/protocol/openid-connect/auth",
        "clientAuthMethod": "client_secret_basic",
        "disableUserInfo": "true",
        "logoutUrl": "https://auth-stage.roscap.com/realms/internal-bank-idm/protocol/openid-connect/logout",
        "syncMode": "FORCE",
        "clientSecret": "**********"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "2b91dbe9-4c06-48ab-abe7-3dbbada4e430",
      "name": "LDAP_ID",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "attributes.LDAP_ID",
        "user.attribute": "LDAP_ID"
      }
    },
    {
      "id": "013ceef1-4bfd-41b1-a666-9b51073fa792",
      "name": "phone",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "attributes.phone",
        "user.attribute": "phone"
      }
    },
    {
      "id": "a8081f29-032f-46ca-aaf3-abf3b344a53b",
      "name": "title",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "title",
        "claim": "attributes.title"
      }
    },
    {
      "id": "f2019e87-5906-4d39-8f73-d45b0cdaa9b6",
      "name": "region",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "region",
        "claim": "attributes.region"
      }
    },
    {
      "id": "436ca5c1-391b-48b8-adef-338653c8dd88",
      "name": "LDAP_ENTRY_DN",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "LDAP_ENTRY_DN",
        "claim": "attributes.LDAP_ENTRY_DN"
      }
    },
    {
      "id": "57b18c8d-e6b8-4599-8867-a937f833c45a",
      "name": "claim-lksk-roles-elka-gsl-ad-ga-lksk.supervisor",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-bank-elka.gsl-ad-ga-lksk.supervisor",
        "claim.value": "gsl-ad-ga-lksk.supervisor"
      }
    },
    {
      "id": "83b56102-8532-42c1-80f7-cda265c92dd8",
      "name": "city",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claim": "attributes.city",
        "user.attribute": "city"
      }
    },
    {
      "id": "44b895ac-4d46-41cc-ba02-773d38b43b64",
      "name": "department",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "department",
        "claim": "attributes.department"
      }
    },
    {
      "id": "7b50f2d9-3534-4017-86c4-7725d0f66f50",
      "name": "claim-lksk-roles-supervisor",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-eisgs-lksk.gsl-ad-ga-lksk.supervisor",
        "claim.value": "gsl-ad-ga-lksk.supervisor"
      }
    },
    {
      "id": "ac5518be-b03e-4d0d-a100-7d0c911a32f1",
      "name": "company",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "company",
        "claim": "attributes.company"
      }
    },
    {
      "id": "e3e95670-c117-4eb8-a4f1-05b235d594e4",
      "name": "claim-lksk-roles-elka-gsg-ad-gf-bank.users",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-bank-elka.gsg-ad-gf-bank.users",
        "claim.value": "gsg-ad-gf-bank.users"
      }
    },
    {
      "id": "f65c7722-f3af-4375-816e-67c826b7f065",
      "name": "claim-lksk-roles-observer",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-eisgs-lksk.gsl-ad-ga-lksk.observer",
        "claim.value": "gsl-ad-ga-lksk.observer"
      }
    },
    {
      "id": "4a2910ec-90e8-48d4-9f78-fef9cf130151",
      "name": "claim-bank-mobile-gsl-ad-gf-operatorMB",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "internal_roles",
        "role": "app-bank-mobile.bank.portal.gsl-ad-gf-operatorMB",
        "claim.value": "gsl-ad-gf-operatorMB"
      }
    },
    {
      "id": "980ec55b-79c9-4b8e-895d-6c56b43731b7",
      "name": "claim-lksk-roles-road-gsl-ad-ga-lksk.supervisor",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-bank-credit-road.gsl-ad-ga-lksk.supervisor",
        "claim.value": "gsl-ad-ga-lksk.supervisor"
      }
    },
    {
      "id": "82758298-6ac8-4598-bd76-ab307bf3aa7e",
      "name": "claim-bank-mobile-gsl-ad-gf-adminMB",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "internal_roles",
        "role": "app-bank-mobile.bank.portal.gsl-ad-gf-adminMB",
        "claim.value": "gsl-ad-gf-adminMB"
      }
    },
    {
      "id": "aa231d0a-3950-41b4-a633-8b82a65512cd",
      "name": "claim-lksk-roles-inspector",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-eisgs-lksk.gsl-ad-gf-lksk.inspector",
        "claim.value": "gsl-ad-gf-lksk.inspector"
      }
    },
    {
      "id": "f8635f7d-c549-4f16-9ce7-a2f59d108106",
      "name": "LDAP_ID",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claim": "attributes.LDAP_ID",
        "user.attribute": "LDAP_ID"
      }
    },
    {
      "id": "85087bc0-950b-429b-aa43-d69806be371a",
      "name": "claim-bank-mobile-gsl-ad-gf-supervisorMB",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "internal_roles",
        "role": "app-bank-mobile.bank.portal.gsl-ad-gf-supervisorMB",
        "claim.value": "gsl-ad-gf-supervisorMB"
      }
    },
    {
      "id": "c0c9c531-6288-4ac7-9c7a-107909efa8e3",
      "name": "LDAP_ENTRY_DN",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "attributes.LDAP_ENTRY_DN",
        "user.attribute": "LDAP_ENTRY_DN"
      }
    },
    {
      "id": "bf25ac1c-bc6d-469f-8bea-0940ce4b164b",
      "name": "modify",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claim": "attributes.modifyTimestamp",
        "user.attribute": "modify"
      }
    },
    {
      "id": "fc20f73b-dee5-475e-812b-b1534b035300",
      "name": "employeeid",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "employeeid",
        "claim": "attributes.employeeID"
      }
    },
    {
      "id": "51108007-3b38-4843-8c90-952fe17b37c4",
      "name": "claim-lksk-roles-banking_support",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-eisgs-lksk.gsl-ad-gf-lksk.banking_support",
        "claim.value": "gsl-ad-gf-lksk.banking_support"
      }
    },
    {
      "id": "77439fb4-5552-4e3c-8f27-8b1ab5b38d80",
      "name": "claim-lksk-roles-manager",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-eisgs-lksk.gsl-ad-ga-lksk.manager",
        "claim.value": "gsl-ad-ga-lksk.manager"
      }
    },
    {
      "id": "044ff803-467f-4027-9203-46b131ecc3e1",
      "name": "creation",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "creation",
        "claim": "attributes.createTimestamp"
      }
    },
    {
      "id": "763e36e5-9de0-432f-a7cd-9ea263037c1b",
      "name": "phone from mobilePhone",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "user.attribute": "phone",
        "claim": "attributes.mobilePhone"
      }
    },
    {
      "id": "0efcc04d-b50d-45dc-8652-11e5296333fd",
      "name": "Мобильный телефон",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "user.attribute": "phone",
        "claim": "attributes.phone"
      }
    },
    {
      "id": "c994d31f-2062-40e5-a21b-2fac6c312f2c",
      "name": "claim-lksk-roles-users",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-eisgs-lksk.gsg-ad-gf-bank.users",
        "claim.value": "gsg-ad-gf-bank.users"
      }
    },
    {
      "id": "59194867-d8d2-48c4-9c71-cd83d2718007",
      "name": "middle-name",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-user-attribute-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claim": "attributes.middleName",
        "user.attribute": "middleName"
      }
    },
    {
      "id": "6eaf2f2f-992c-4d1d-b5fb-2fcdec7958f5",
      "name": "claim-bank-mobile-gsl-ad-gf-userMB",
      "identityProviderAlias": "internal-bank-idm-mobile.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "internal_roles",
        "role": "app-bank-mobile.bank.portal.gsl-ad-gf-userMB",
        "claim.value": "gsl-ad-gf-userMB"
      }
    },
    {
      "id": "62568265-3f39-422e-953f-84d5ce9be421",
      "name": "claim-lksk-roles-road-gsg-ad-gf-bank.users",
      "identityProviderAlias": "internal-bank-idm.realm",
      "identityProviderMapper": "oidc-role-idp-mapper",
      "config": {
        "syncMode": "FORCE",
        "claims": "[]",
        "claim": "roles-internal",
        "role": "app-bank-credit-road.gsg-ad-gf-bank.users",
        "claim.value": "gsg-ad-gf-bank.users"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "350ecb81-4928-4b25-93c3-bcf88c358c81",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "1d61b014-520a-4b56-b3cb-fba116a349e3",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "e62e62b2-a89e-4621-a72b-ad7a7fb94639",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "b71b6625-a0cb-4d64-b68e-338be02d0a59",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "34655e90-ce40-43ba-8dcb-bb6a7e249993",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "bc5cc898-654c-4298-bcd5-5996b59588ab",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "978191c8-e01f-4962-a0d8-fee53978cf4f",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "59df3b74-afee-4b4e-9214-a2633d7e88f2",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "d9492962-2929-466c-85e6-0ee020a46ef8",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "9f5d7818-14f0-443c-9310-9566d7c95910",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a233484e-d1ef-4522-9f15-cc8d5b1197be",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "ru"
  ],
  "defaultLocale": "ru",
  "authenticationFlows": [
    {
      "id": "ec3b7c7f-7d1b-4a43-af00-feca22d579a8",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "811a32b5-3ef3-4f83-a12a-44828a136b05",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e7ccb305-af32-4f5a-93be-6f4585614cd4",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "de5c638b-da57-472a-bcdd-904fb2ed14e3",
      "alias": "Browser for Internal User",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "internal-bank-idm.realm",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8ca08d4e-aec2-420d-98ed-aad074167b2c",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "765e60be-4447-4cde-9be2-2ec7f577fcca",
      "alias": "ELKA Reset Credentials",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "111",
          "authenticator": "idm.reset-credentials-elka-sel-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.elka-notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idm.reset-credentials-elka-res-pas",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ab233c5f-3e57-4979-b785-28dccaf47d06",
      "alias": "Elka Browser",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "Elka-test-Browser-2",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c39aaae7-daa6-48e6-97ae-d567d08921a6",
      "alias": "Elka-test-Browser-2",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idm.auth-elka-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.elka-notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9c7bd956-f066-444f-a66d-7f1459e1addd",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6d8a5092-1682-4a49-88c0-930d0d4df7ef",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c8dfd835-483f-4892-ac8c-37fbecac8361",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0397fffd-14bc-4f52-8b86-c6900ad49a27",
      "alias": "S.AUTH.0.5_mobile",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "identity-provider-redirector_Config",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cafc6776-ef4e-4b49-96a7-84b4e7eefffb",
      "alias": "S.AUTH.0.5_mobile_otp",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24db2f3d-4850-4606-aa7d-233da89e07fc",
      "alias": "S.AUTH.03.1_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.auth-register-him-please_Config",
          "authenticator": "idm.auth-register-him-please",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "24edc791-8502-4694-be18-9de93f21226d",
      "alias": "S.AUTH.03.2_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.03.2_Browser.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b0dcce6c-9b6d-4220-8a0b-568b7a8955e9",
      "alias": "S.AUTH.03.2_Browser.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.03.2_Browser.Forms.OTP",
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9a49cd7b-c101-4938-8d33-d580eda6dc2f",
      "alias": "S.AUTH.03.2_Browser.Forms.OTP",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "be4b3c92-c535-46bf-8964-791d538c97aa",
      "alias": "S.AUTH.03.3_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.03.3_Browser.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c5d65c6c-adf6-4f00-9cff-5ac2b91d095c",
      "alias": "S.AUTH.03.3_Browser.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.03.3_Browser.Forms.OTP",
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f0fb16a3-b525-4972-80fa-39c23711773f",
      "alias": "S.AUTH.03.3_Browser.Forms.OTP",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fc218d67-35b7-4fdd-8798-a802781afd24",
      "alias": "S.AUTH.03.4_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.03.4_Browser.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "64abe056-bf35-42fa-afa1-3361052b23e5",
      "alias": "S.AUTH.03.4_Browser.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.03.4_Browser.Forms.OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "86c1ff64-e0c2-4cd0-803c-3ea7120f1cda",
      "alias": "S.AUTH.03.4_Browser.Forms.OTP",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "db6b7658-d771-4817-a5af-1d346350fc8d",
      "alias": "S.AUTH.04_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.04_Browser.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e0398a21-edb6-4a5a-b46d-32b3f6959493",
      "alias": "S.AUTH.04_Browser.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "DISABLED",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.04_Browser.Forms.OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "f0ef26af-ac48-40ee-ad27-1820eea560da",
      "alias": "S.AUTH.04_Browser.Forms.OTP",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "1b87b8da-3b4b-4ebe-ae0a-ddc93191247a",
      "alias": "S.AUTH.05_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "identity-provider-redirector_Config",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0633a1ee-61f7-49ae-8883-35f551ed53b7",
      "alias": "S.AUTH.05_Browser_OTP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "identity-provider-redirector_Config",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a6bbe287-e7b9-4335-92b5-bacf0ada4d4e",
      "alias": "S.AUTH.05_OTP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 3,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.05_OTP S.CHP.02.1_ResetCredentials.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6fc2e569-7ac4-4b6b-b10b-eae23faae45e",
      "alias": "S.AUTH.05_OTP S.CHP.02.1_ResetCredentials.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b2a0627d-438b-4f8c-b847-fad24cd66c1e",
      "alias": "S.AUTH.08_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "Internal",
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 2,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.08_Browser.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e0baee95-2ab7-4529-a026-85c1693b4b1a",
      "alias": "S.AUTH.08_Browser.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 1,
          "autheticatorFlow": true,
          "flowAlias": "S.AUTH.08_Browser.Forms.OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "0f00a786-0c3a-4124-bad5-bc27ae538483",
      "alias": "S.AUTH.08_Browser.Forms.OTP",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a2d694d1-8dba-464c-b854-fe9423e7fac8",
      "alias": "S.CHP.01_ResetCredentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "67d390cd-124d-4f23-be52-3ae006ae3bcd",
      "alias": "S.CHP.02.1_ResetCredentials",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 3,
          "autheticatorFlow": true,
          "flowAlias": "S.CHP.02.1_ResetCredentials.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "81edb8f5-2a79-4267-9e8f-c7e46c22d0a0",
      "alias": "S.CHP.02.1_ResetCredentials.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "4883ed35-203a-4e5d-ad0a-dd8e0437054f",
      "alias": "S.CHP.02.2_ResetCredentials",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 3,
          "autheticatorFlow": true,
          "flowAlias": "S.CHP.02.2_ResetCredentials.Forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "46bad560-3bca-44dd-9b12-245212cab4eb",
      "alias": "S.CHP.02.2_ResetCredentials.Forms",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "73ee1b5b-af0d-466d-af12-60c9649a17ad",
      "alias": "S.REG.03.1_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.auth-register-him-please_Config",
          "authenticator": "idm.auth-register-him-please",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ed2a2001-180e-4e79-a0b5-2317b2aa3aa3",
      "alias": "S.REG.03.2_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.auth-register-him-please_Config",
          "authenticator": "idm.auth-register-him-please",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "742690b8-3d5d-42aa-a575-305335749cab",
      "alias": "S.REG.03.3_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.auth-register-him-please_Config",
          "authenticator": "idm.auth-register-him-please",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idm.registration.upset-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.registration.send-reset-email_Config",
          "authenticator": "idm.registration.send-reset-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 3,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6287b834-0b5d-4970-9835-ac3b2e98c83f",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ca46cdaf-c722-4d90-8731-2fd9ed93f854",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c4fb3b64-1300-4d3f-ab92-1db6e4af7073",
      "alias": "WDT-78",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "event",
          "authenticator": "idm.auth-register-him-please",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "BSS",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 2,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b76c3807-619a-4549-9e7b-3e16ab770c46",
      "alias": "WDT-78_Browser",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "idm.auth-register-him-please_Config",
          "authenticator": "idm.auth-register-him-please",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "idm.notification-factor.auth_Config",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "afae7ed5-15e8-449b-a5f4-49ecd952791c",
      "alias": "WDT-82.Browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "WDT-82.Browser forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "67361117-959b-4c79-b112-7e1cb1f400b1",
      "alias": "WDT-82.Browser Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b0395207-a70c-40df-ae9e-414826f1c059",
      "alias": "WDT-82.Browser forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "WDT-82.Browser Browser - Conditional OTP",
          "userSetupAllowed": false
        },
        {
          "authenticatorConfig": "two_factor",
          "authenticator": "idm.notification-factor.auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 21,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "61977f9b-6c1b-4775-8c14-32c75f9aa255",
      "alias": "auth_potok",
      "description": "",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 0,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 1,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "774fb33e-b184-443a-bc00-ccb29d9aea36",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "8c7e89ed-df83-429c-b576-e7ef9aedd84d",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "50abeb55-d4b6-43d9-9fe7-698036aab2fa",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c16aa80c-9e63-4da7-a98b-a6638f5b8a62",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5c1a19ab-14e8-4e09-9bed-a7b3f3af3f94",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "97dcd91a-e5ae-4303-84bc-6f6ab34ce195",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "cadfce68-0823-4393-a53e-f1c7b340c2a8",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "09f76f92-6076-442f-8059-fc78dee3683a",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "71ab1381-cd05-4c07-b826-fa506a4af648",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "dcb645b9-8584-47ed-a939-cb4045e8fa5a",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9fa71aae-b902-4415-ac91-d95bbe086e25",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "32a42d39-73f3-45ad-97a1-42233344a670",
      "alias": "Регистрация пользователя",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Регистрация пользователя User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "9183aa10-4a53-4e4d-8bc7-ea178bc81483",
      "alias": "Регистрация пользователя Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Регистрация пользователя Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "c0e574f9-d689-4865-8079-815c20e5f925",
      "alias": "Регистрация пользователя First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "beb54e27-cf91-4dbc-a1a4-5ff09a2a17a5",
      "alias": "Регистрация пользователя Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Регистрация пользователя Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "49870723-69f8-4915-966a-62169e0613de",
      "alias": "Регистрация пользователя User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Регистрация пользователя Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "47089455-3026-484c-b780-d56dd8c3ded3",
      "alias": "Регистрация пользователя Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Регистрация пользователя First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "37e1b394-0cfc-4c23-a5d7-fc3ed38b6443",
      "alias": "111",
      "config": {
        "notificationType": "EMAIL"
      }
    },
    {
      "id": "bb9b4515-56ba-40ba-9ad1-c339419fda0a",
      "alias": "111",
      "config": {
        "kafkaValidateUserAddress": "https://client-profile-sync-gateway.dev.elka.roscap.com/api/v1/users/validation"
      }
    },
    {
      "id": "9a50368d-099b-4ed4-95c8-eb7076b662f6",
      "alias": "BSS",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "a3f3589e-8832-4a43-a81a-fa4aa1032ce5",
      "alias": "Internal",
      "config": {
        "defaultProvider": "internal-bank-idm.realm"
      }
    },
    {
      "id": "a4ea95aa-d84a-48a0-85b0-6c7b801dced1",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "0a3e5d66-3b73-49bd-872a-c724c1a9e065",
      "alias": "event",
      "config": {
        "notification.event": "true"
      }
    },
    {
      "id": "da38d755-e7ee-4cfa-bfd1-1d50fcd7f2b8",
      "alias": "identity-provider-redirector_Config",
      "config": {
        "defaultProvider": "internal-bank-idm.realm"
      }
    },
    {
      "id": "83f9c3f5-4a8d-4189-b2f0-c5032f5ad3f3",
      "alias": "identity-provider-redirector_Config",
      "config": {
        "defaultProvider": "internal-bank-idm-mobile.realm"
      }
    },
    {
      "id": "df2215d1-a978-4395-afea-4f08d9326aaa",
      "alias": "identity-provider-redirector_Config",
      "config": {}
    },
    {
      "id": "84a09370-adbd-4c34-8761-354ee7394392",
      "alias": "idm.auth-register-him-please_Config",
      "config": {
        "notification.event": "true"
      }
    },
    {
      "id": "3cf89d7f-c167-48a8-a239-4e4beb6168bb",
      "alias": "idm.auth-register-him-please_Config",
      "config": {}
    },
    {
      "id": "da223828-6da6-4f39-be6a-4560e0855a81",
      "alias": "idm.auth-register-him-please_Config",
      "config": {
        "notification.event": "true"
      }
    },
    {
      "id": "e7535bcc-1b8d-434c-9151-26eae7dca0ab",
      "alias": "idm.auth-register-him-please_Config",
      "config": {}
    },
    {
      "id": "99f91647-266f-4ecc-96b3-7d3108e69d29",
      "alias": "idm.auth-register-him-please_Config",
      "config": {
        "notification.event": "true"
      }
    },
    {
      "id": "fce0d944-5c8c-4345-9994-d82eb6f3e4ff",
      "alias": "idm.elka-notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "a017120d-9b45-4c9d-92dd-e3613bfd89fc",
      "alias": "idm.elka-notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "775c6e85-e7bc-4403-942f-60a93ec6cf11",
      "alias": "idm.elka-notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "f8d4312e-a5b6-4da2-be3a-943cc1a57736",
      "alias": "idm.elka-notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "9c2e8021-bc0d-4e96-a239-6d1ed29f369f",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "fc282c9c-464e-4c5c-9ee2-c8784999270d",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "82bc073d-422b-4417-9b94-b684273ba54c",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "EMAIL"
      }
    },
    {
      "id": "af277799-dcb6-4e1c-bcac-a6c2dd2d0710",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "f87b6422-c083-46f5-8a70-ec3c30ddfe78",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "637ca32c-5fd7-4906-9343-75e2155cf812",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "459fab88-8104-4214-a298-add13b6a1d99",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "2d6a67e3-7ada-4e57-a003-2f6169f40c40",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "60134eab-64dd-4dcb-b8ef-708d57768163",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "EMAIL"
      }
    },
    {
      "id": "f486a732-01c0-4f20-bf8f-9ca735a29402",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "d95f0dbc-de9b-4b8a-8e69-7fbe799c0612",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "f4e80e26-d6a7-400e-9d6c-7b5dc760157c",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "43be6f1c-0022-4757-aa3d-5c6a10b46354",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "1946f0eb-29c5-42d9-a00f-b129bb760338",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "69a16b44-a4fb-45a8-b16b-3a3342fe5d6c",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "6a9b3250-4532-4e09-889e-b032129eb208",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "acc6bd57-8d80-48ab-8c7a-3042d6969671",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "d2570508-8965-4c45-8114-a2c3e3ccc85a",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "bbacac94-00ac-4d08-ad02-b43c26c75168",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "b9b69d02-5eff-4ea6-a1a3-aa0dedec216a",
      "alias": "idm.notification-factor.auth_Config",
      "config": {}
    },
    {
      "id": "16907b6f-0f85-427c-a45f-6c220e865fe1",
      "alias": "idm.notification-factor.auth_Config",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "cf904dd2-f09a-4b6b-bdba-a28eb2f506e7",
      "alias": "idm.registration.send-reset-email_Config",
      "config": {}
    },
    {
      "id": "435d9c86-d478-4559-b459-9af5d32dbc5f",
      "alias": "internal-bank-idm.realm",
      "config": {
        "defaultProvider": "internal-bank-idm.realm"
      }
    },
    {
      "id": "2ecb01b4-1f38-43ec-8347-63d488901773",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    },
    {
      "id": "d2b3751e-187c-4cab-8493-fa2add2ca6f5",
      "alias": "two_factor",
      "config": {
        "notificationType": "SMS"
      }
    },
    {
      "id": "ae02867b-cba8-4282-8acc-8b89574d394d",
      "alias": "two_factor",
      "config": {
        "notificationType": "SMS"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": false,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    },
    {
      "alias": "idm.notification-action-sms",
      "name": "Второй фактор. СМС",
      "providerId": "idm.notification-action-sms",
      "enabled": true,
      "defaultAction": false,
      "priority": 1001,
      "config": {}
    },
    {
      "alias": "idm.notification-action-mail",
      "name": "Второй фактор. Почта",
      "providerId": "idm.notification-action-mail",
      "enabled": true,
      "defaultAction": false,
      "priority": 1002,
      "config": {}
    },
    {
      "alias": "idm.notification-action-elka-update-password",
      "name": "Изменение пароля",
      "providerId": "idm.notification-action-elka-update-password",
      "enabled": true,
      "defaultAction": false,
      "priority": 1003,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "S.REG.03.1_Browser",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "ELKA Reset Credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "notificationUrl": "http://quadrigatus.roscap.com:8080/messages/importFull",
    "notificationRequestContentType": "application/vnd.com.bssys.ns.v1+json",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaExpiresIn": "120",
    "notificationClient": "999",
    "notificationRequestMethod": "PUT",
    "notificationBSSEmailChannel": "EMAIL",
    "frontendUrl": "https://auth-stage.roscap.com/auth",
    "disableInactionUsers": "false",
    "notificationBSSCode": "-8044",
    "notificationCodeMask": "dd-dd-dd",
    "notificationDemoCode": "1234",
    "cibaAuthRequestedUserHint": "login_hint",
    "notificationRequestAuthenticationType": "BASIC",
    "oauth2DevicePollingInterval": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "clientSessionIdleTimeout": "0",
    "userProfileEnabled": "false",
    "notificationDemo": "false",
    "idUsernameType": "PHONE",
    "cibaInterval": "5",
    "oauth2DeviceCodeLifespan": "600",
    "notificationRequestAuthentication": "false",
    "notificationAttribute": "phone",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "notificationCodeTTL": "90000",
    "notificationProvider": "idm.notification.service.bss",
    "notificationBSSSmsChannel": "SMS_WORK"
  },
  "keycloakVersion": "17.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}